package EG55OI1112;

import java.io.FileWriter;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

public class JSONWriteEG55OI {

	public static void main(String[] args) {
		
		JSONArray da = new JSONArray();
		da.add(createLesson("Oracle rendszergazda", "hétfő", "8", "10", "Inf.103","Prof. Dr. Kovács László", "WebTech"));
		//others
		
		JSONObject root = new JSONObject();
		root.put("ora", da);
		JSONObject jsonObject = new JSONObject();
		jsonObject.put("DA_Orarend", root);
		
		fileWrite(jsonObject, "orarendDA.json");
		consoleWriter(jsonObject);
	}
	
	private static void fileWrite(JSONObject jsonObject, String fileName) {
		try(FileWriter writer = new FileWriter(fileName)){
			writer.write(indentJson(JSONObject.toJSONString()));
		} catch(Exception e) {
			e.printStackTrace();
		}
	}
	
	private static void consoleWriter(JSONObject jsonObject){
		System.out.println("JSON dokumentum tartalma: \n");
		
		JSONObject root = (JSONObject) jsonObject.get("DA_orarend");
		JSONArray da = (JSONArray) root.get("ora");
		
		for(int i = 0; i<da.size(); i++) {
			JSONObject lesson = (JSONObject) da.get(i);
			JSONObject time = (JSONObject) lesson.get("idopont");
			System.out.println("Tárgy: " +lesson.get("targy"));
			System.out.println("Időpont: " +lesson.get("nap")+" "+time.get("tol")+"-"+time.get("ig"));
			System.out.println("Helyszín: " +lesson.get("helyszin"));
			System.out.println("Oktató: " +lesson.get("oktato"));
			System.out.println("Szak: " +lesson.get("szak")+"\n");
		}
	}
	
	private static String indentJson(String json) {
		String out = "";
		int indent = 0;
		for(int i = 0; i < json.length()-1; i++) {
			out += json.charAt(i);
			if(json.charAt(i) == ',') {
				out += "\n" + "   ".repeat(indent > 0 ? indent : 0);
			} else if (json.charAt(i) == '{' || json.charAt(i) == '[') {
				indent ++;
				out += "\n" + "   ".repeat(indent > 0 ? indent : 0);
			} else if (json.charAt(i) == '}' || json.charAt(i) == ']') {
				indent --;
				out += "\n" + "   ".repeat(indent > 0 ? indent : 0);
			}
		}
		out += json.charAt(json.length()-1);
		return out;
	}
	
	private static JSONObject createLesson(String subject, String day, String from, String to, String place, String teacher, String major) {
		JSONObject lesson = new JSONObject();
		JSONObject time = new JSONObject();
		time.put("nap", day);
		time.put("tol", from);
		time.put("ig", to);
		lesson.put("targy", subject);
		lesson.put("idopont", time);
		lesson.put("helyszin", place);
		lesson.put("oktato", teacher);
		lesson.put("szak", major);
		return lesson;
	}
	
	
}


